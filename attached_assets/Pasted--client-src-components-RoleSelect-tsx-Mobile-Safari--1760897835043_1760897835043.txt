/* =======================================
   client/src/components/RoleSelect.tsx
   Mobile-Safari Proof Version (Paste All)
   ======================================= */
import React, { useCallback } from 'react';

type DriverType = 'driver' | 'low_loader';
const USER_ID = 'user-1';

async function setDriverType(userId: string, driverType: DriverType) {
  const res = await fetch(`/api/users/${userId}/driver-type`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ driverType }),
  });
  if (!res.ok) throw new Error(await res.text());
  return res.json();
}

const RoleSelect: React.FC = () => {
  const handleSelect = useCallback(async (type: DriverType) => {
    try {
      console.log('üîµ BUTTON CLICKED:', type);
      alert(`Button ${type} clicked`);
      const res = await setDriverType(USER_ID, type);
      console.log('‚úÖ POST ok', res);
      alert(`Saved as ${type}`);
      window.location.href = '/map'; // auto-redirect after save
    } catch (err) {
      console.error('‚ùå POST failed', err);
      alert('Failed to save driver type');
    }
  }, []);

  const baseStyle: React.CSSProperties = {
    padding: '14px',
    borderRadius: 10,
    color: '#fff',
    fontWeight: 600,
    fontSize: 18,
    border: 'none',
    width: '100%',
    maxWidth: 340,
    margin: '10px auto',
    touchAction: 'manipulation', // fixes Safari double-tap delay
    WebkitTapHighlightColor: 'transparent', // removes highlight
    display: 'block',
  };

  return (
    <div
      style={{
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        padding: '20px',
      }}
    >
      <h3 style={{ marginBottom: 10 }}>Choose your role</h3>

      <button
        type="button"
        style={{ ...baseStyle, background: '#1e88e5' }}
        onClick={() => handleSelect('driver')}
        onTouchEnd={(e) => {
          e.preventDefault();
          handleSelect('driver');
        }}
      >
        Individual Driver
      </button>

      <button
        type="button"
        style={{ ...baseStyle, background: '#e53935' }}
        onClick={() => handleSelect('low_loader')}
        onTouchEnd={(e) => {
          e.preventDefault();
          handleSelect('low_loader');
        }}
      >
        Low-Loader Operator
      </button>
    </div>
  );
};

export default RoleSelect;